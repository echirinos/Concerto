volumes:
  postgres-data:
    external: true
  pg-admin:
    external: true

services:
  postgres:
    build:
      context: ./relational-data
      dockerfile: ./Dockerfile.dev
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      - POSTGRES_MULTIPLE_DATABASES=concerts, users
      - POSTGRES_PASSWORD=test-databases
    ports:
      - 15432:5432
  pg-admin:
    image: dpage/pgadmin4
    volumes:
      - pg-admin:/var/lib/pgadmin
    ports:
      - 8082:80
    environment:
      PGADMIN_DEFAULT_EMAIL: test@test.com
      PGADMIN_DEFAULT_PASSWORD: concerto
      PGADMIN_DISABLE_POSTFIX: 1
  concerts-api:
    build:
      context: ./concerts-api
      dockerfile: ./Dockerfile.dev
    environment:
      DATABASE_URL: postgresql://concerts:password@postgres/concerts
      WAIT_HOSTS: postgres:5432
      SIGNING_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
      TICKETMASTER_API_KEY: ${TICKETMASTER_API_KEY}
    ports:
      - "8000:8000"
    volumes:
      - ./concerts-api:/app
  users-api:
    build:
      context: ./users-api
      dockerfile: ./Dockerfile.dev
    environment:
      USERS_DATABASE_URL: postgresql://users:password@postgres/users
      WAIT_HOSTS: postgres:5432
      SIGNING_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c
    ports:
      - "8001:8000"
    volumes:
      - ./users-api:/app
  ghi:
    image: node:lts-bullseye
    command: /bin/bash run.sh
    working_dir: /app
    volumes:
      - ./ghi:/app
    ports:
      - "3000:3000"
    environment:
      HOST_OS: ${OS}
      NODE_ENV: development
      HOST: "0.0.0.0"
      PUBLIC_URL: http://localhost:3000
      REACT_APP_SAMPLE_SERVICE_API_HOST: http://localhost:8000
      REACT_APP_ACCOUNTS_HOST: http://localhost:8001
