stages:
  - test
  - build
  - deploy

# Run flake8 to check for code quality
lint-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - pip install flake8
    - flake8 concerts-api
    - flake8 users-api
    # - flake8 sample_service

# Run the unit tests
users-unit-test-job:
  image: python:3-bullseye
  stage: test
  variables:
    DATABASE_URL: ${DATABASE_URL}
    SIGNING_KEY: ${SIGNING_KEY}
  needs:
  script:
    - cd users-api
    - pip install -r requirements.txt
    - python -m pytest

# Build the React/JavaScript front-end
build-front-end-job:
  stage: build
  image: node:lts-bullseye
  needs:
    - lint-test-job
  variables:
    # If either of these variables is defined in the GitLab
    # CI/CD variables, that value will override the value here.
    # You need to substitute in your real values for
    # GROUP_NAME, PROJECT_NAME, & WEBSERVICE_NAME below.
    PUBLIC_URL: https://gitlab.com/the-jerney/concerto
    REACT_APP_SAMPLE_SERVICE_API_HOST: https://concerto-service.onrender.com/
  script:
    - cd ghi
    - npm install
    - npm run build
    - cp build/index.html build/404.html
  artifacts:
    paths:
      - ghi/build/

# Deploy-the-React-JavaScript-front-end-to-GitLab-pages:
pages:
  stage: deploy
# throw feature branch where $CI_DEFAULT_BRANCH IS AND PUT IT BACK TO HOW IT WAS AFTER
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  dependencies:
    - build-front-end-job
  needs:
    - build-front-end-job
  script:
    - mv ghi/build/ public
  artifacts:
    paths:
      - public
